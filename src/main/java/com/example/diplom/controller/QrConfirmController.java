package com.example.diplom.controller;

import com.example.diplom.models.Order;
import com.example.diplom.repository.OrderRepository;
import com.example.diplom.service.OrderCheckService;
import com.example.diplom.service.TelegramNotificationService;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.io.File;
import java.util.Optional;

@RestController
@RequiredArgsConstructor
public class QrConfirmController {

    private final OrderRepository orderRepository;
    private final TelegramNotificationService telegramNotificationService;
    private final OrderCheckService orderCheckService;

    @GetMapping("/qr-confirm")
    public ResponseEntity<String> confirmQr(
            @RequestParam Long orderId
    ) throws Exception {
        Optional<Order> orderOpt = orderRepository.findById(orderId);
        if (orderOpt.isEmpty()) return ResponseEntity.badRequest().body("Order not found");

        Order order = orderOpt.get();
        String chatId = order.getClient().getChatId(); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –µ—Å—Ç—å chatId —É –∫–ª–∏–µ–Ω—Ç–∞

        File pdf = orderCheckService.generateOrderReceiptPdf(order);

        telegramNotificationService.sendDocument(
                chatId,
                pdf,
                "üßæ –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑ ‚Ññ" + order.getId() + "!\n–í–∞—à —á–µ–∫ –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω –Ω–∏–∂–µ üíô"
        );
        pdf.delete(); // —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª

        return ResponseEntity.ok("–ß–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram");
    }
}


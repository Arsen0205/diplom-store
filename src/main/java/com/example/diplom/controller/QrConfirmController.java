package com.example.diplom.controller;

import com.example.diplom.models.Order;
import com.example.diplom.repository.OrderRepository;
import com.example.diplom.service.OrderCheckService;
import com.example.diplom.service.TelegramNotificationService;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.io.File;
import java.util.Optional;

@Tag(
        name = "QR Confirmation",
        description = "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ QR-–∫–æ–¥ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ–∫–∞ –≤ Telegram"
)
@RestController
@RequiredArgsConstructor
public class QrConfirmController {
    private final OrderRepository orderRepository;
    private final OrderCheckService orderCheckService;
    private final TelegramNotificationService telegramNotificationService;

    @Operation(
            summary     = "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑ –ø–æ QR",
            description = "–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç PDF-—á–µ–∫ –ø–æ –∑–∞–∫–∞–∑—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –∫–ª–∏–µ–Ω—Ç—É –≤ Telegram"
    )
    @GetMapping("/api/v1/qr-confirm")
    public ResponseEntity<String> confirmQr(@RequestParam Long orderId) throws Exception {
        Optional<Order> orderOpt = orderRepository.findById(orderId);
        if (orderOpt.isEmpty()) {
            return ResponseEntity.badRequest().body("Order not found");
        }

        Order order = orderOpt.get();
        String chatId = order.getClient().getChatId();

        File pdf = orderCheckService.generateOrderReceiptPdf(order);

        telegramNotificationService.sendDocument(
                chatId,
                pdf,
                "üßæ –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑ ‚Ññ" + order.getId() + "!\n–í–∞—à —á–µ–∫ –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω –Ω–∏–∂–µ üíô"
        );
        pdf.delete();

        return ResponseEntity.ok("–ß–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram");
    }
}
